@Library('sharedlibs') _

node{
    def mavenHome = tool name: "maven3.8.5"
    properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], 
    pipelineTriggers([pollSCM('* * * * *')])])
    
echo "Job name is: ${env.JOB_NAME}" 
echo "Node name is: ${env.NODE_NAME}" 
echo "Build Number is: ${env.BUILD_NUMBER}" 


try{
sendSlackNotifications('STARTED')
    stage('CheckOutCode'){
        git branch: 'development', credentialsId: '96e56444-b157-401a-a1ad-faa3e97a4a9d', url: 'https://github.com/vss-devops/maven-web-application.git'
    }
    
    stage('Build'){
        sh "${mavenHome}/bin/mvn clean package" 
    }
    
    stage('SonarReport'){
        sh "${mavenHome}/bin/mvn sonar:sonar" 
    }
    
    stage('UploadArtifactToNexus'){
        sh "${mavenHome}/bin/mvn deploy" 
    }
    
    stage('DeployToTomcat')
        {sshagent(['645c45c9-56ac-4345-b834-8b156accb765']) {
            sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@34.238.242.58:/opt/apache-tomcat-9.0.68/webapps"
        }
    }
}catch(e){
currentBuild.result = 'FAILED'
    throw e
}
finally{
sendSlackNotifications(currentBuild.result)
}
}//Node Closing

//Below code will use to send slack notification

/*def sendSlackNotifications(String buildStatus = 'STARTED') {
  buildStatus = buildStatus ?: 'SUCCESS'
  
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"
  
  if (buildStatus == 'STARTED'){
	color = 'YELLOW'
	colorCode = '#FF0000'
  } else if (buildStatus == 'SUCCESS') {
	color = 'GREEN'
	colorCode = '#00FF00'
  } else {
    color = 'RED'
	colorCode = '#FF0000'
  }
  
  slackSend (color: colorCode, message: summary, channel: 'wallmart' )
  
}*/
